{"remainingRequest":"/home/kim/Desktop/Test Evaluations/vue-to-do/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kim/Desktop/Test Evaluations/vue-to-do/src/components/ToDo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kim/Desktop/Test Evaluations/vue-to-do/src/components/ToDo.vue","mtime":1642673079936},{"path":"/home/kim/Desktop/Test Evaluations/vue-to-do/node_modules/cache-loader/dist/cjs.js","mtime":1642669275805},{"path":"/home/kim/Desktop/Test Evaluations/vue-to-do/node_modules/babel-loader/lib/index.js","mtime":1642669278441},{"path":"/home/kim/Desktop/Test Evaluations/vue-to-do/node_modules/cache-loader/dist/cjs.js","mtime":1642669275805},{"path":"/home/kim/Desktop/Test Evaluations/vue-to-do/node_modules/vue-loader/lib/index.js","mtime":1642669279189}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgY3VycmVudFN0YXRlOiBTdHJpbmcsCiAgICB0ZXh0Q29udGVudDogU3RyaW5nLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1lc3NhZ2U6IHRoaXMudGV4dENvbnRlbnQsCiAgICAgIGNvbXBsZXRlZDogdGhpcy50ZXh0Q29udGVudCA/IHRydWUgOiBmYWxzZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY29tcFN0YXRlKCkgewogICAgICBpZiAodGhpcy5jdXJyZW50U3RhdGUgPT09ICduZXcnKSB7CiAgICAgICAgdGhpcy5jb21wbGV0ZWQgPSBmYWxzZTsKICAgICAgICB0aGlzLmN1cnJlbnRTdGF0ZSA9ICdvcGVuJzsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["ToDo.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToDo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"todo\">\n    <input type=\"text\" v-model=\"message\" :class=\"{ green: completed }\">\n    <span v-if=\"completed\" class=\"tick\">âœ“</span>\n    <button @click=\"completed = !completed\" class=\"toggle\">Toggle completed</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    currentState: String,\n    textContent: String,\n  },\n  data() {\n    return {\n      message: this.textContent,\n      completed: this.textContent ? true : false\n    }\n  },\n  methods: {\n    compState() {\n      if (this.currentState === 'new') {\n        this.completed = false;\n        this.currentState = 'open';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.green {\n  color: #FFF;\n  background-color: #42b983;\n}\n\n.toggle {\n  position: absolute;\n  right: -20px;\n  top: 60px;\n}\n\n.tick {\n  position: absolute;\n  right: 0px;\n  top: 20px;\n  color: \"#green\";\n}\n\n.todo {\n  position: relative;\n  margin-top: 40px;\n  width: 500px;\n}\n\ninput {\n  width: 100%;\n  font-family: inherit;\n  font-size: inherit;\n  margin-top: 10px;\n}\n\ninput[type=\"text\"],\ninput[type=\"password\"] {\n  padding: 10px;\n  border: 0;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n}\n\ninput[type=\"text\"]:hover,\ninput[type=\"password\"]:hover {\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.3);\n  transition: 0.3s box-shadow;\n}\n</style>"]}]}